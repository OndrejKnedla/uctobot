// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Uživatelé a autentizace
model User {
  id               String      @id @default(cuid())
  whatsappPhone    String      @unique // Primární identifikátor pro WhatsApp
  email            String?     @unique
  name             String
  companyName      String?     // Název firmy
  ico              String?     // IČO
  dic              String?     // DIČ
  address          String?
  city             String?
  zipCode          String?
  country          String      @default("CZ")
  isVatPayer       Boolean     @default(false) // Plátce DPH
  vatFrequency     VatFrequency? // Frekvence DPH (měsíční/čtvrtletní)
  accountingType   AccountingType @default(TAX_RECORDS) // Daňová evidence vs účetnictví
  
  // WhatsApp autentizace
  whatsappVerified Boolean     @default(false)
  whatsappOtp      String?     // OTP pro verifikaci
  whatsappOtpExpiry DateTime?
  lastWhatsappActivity DateTime?
  
  // Předplatné
  subscription     Subscription?
  
  // Vztahy
  invoices         Invoice[]
  expenses         Expense[]
  bankAccounts     BankAccount[]
  categories       Category[]
  contacts         Contact[]
  documents        Document[]
  taxReports       TaxReport[]
  notifications    Notification[]
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([whatsappPhone])
  @@index([email])
}

// Předplatné
model Subscription {
  id               String      @id @default(cuid())
  userId           String      @unique
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  plan             PlanType    @default(MONTHLY)
  status           SubscriptionStatus @default(TRIAL)
  price            Decimal     
  
  trialEndsAt      DateTime?   // Konec zkušební doby
  currentPeriodStart DateTime
  currentPeriodEnd DateTime
  cancelledAt      DateTime?
  
  // Stripe/platební informace
  stripeCustomerId String?
  stripeSubscriptionId String?
  
  // Speciální nabídka pro prvních 50
  isFoundingMember Boolean     @default(false)
  lockedPrice      Decimal?     // Doživotní cena
  
  payments         Payment[]
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@index([status])
}

// Platby
model Payment {
  id               String      @id @default(cuid())
  subscriptionId   String
  subscription     Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  
  amount           Decimal     
  currency         String      @default("CZK")
  status           PaymentStatus
  
  stripePaymentIntentId String?
  stripeInvoiceId  String?
  
  paidAt           DateTime?
  failedAt         DateTime?
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([subscriptionId])
}

// Faktury (vydané)
model Invoice {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  invoiceNumber    String      // Číslo faktury
  variableSymbol   String?
  
  // Odběratel
  contactId        String?
  contact          Contact?    @relation(fields: [contactId], references: [id])
  
  // Částky
  subtotal         Decimal     
  vatAmount        Decimal     
  total            Decimal     
  
  currency         String      @default("CZK")
  exchangeRate     Decimal?    
  
  issuedDate       DateTime
  dueDate          DateTime
  paymentDate      DateTime?
  
  status           InvoiceStatus @default(DRAFT)
  
  items            InvoiceItem[]
  
  // Metadata
  note             String?
  internalNote     String?
  
  // WhatsApp zprávy
  whatsappMessageId String?    // ID zprávy ve WhatsAppu
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@index([status])
  @@index([dueDate])
  @@unique([userId, invoiceNumber])
}

// Položky faktury
model InvoiceItem {
  id               String      @id @default(cuid())
  invoiceId        String
  invoice          Invoice     @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  description      String
  quantity         Decimal     
  unit             String      @default("ks")
  unitPrice        Decimal     
  vatRate          Decimal      // 0, 12, 21
  total            Decimal     
  
  categoryId       String?
  category         Category?   @relation(fields: [categoryId], references: [id])
  
  @@index([invoiceId])
}

// Výdaje (přijaté faktury, účtenky)
model Expense {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  expenseNumber    String      // Interní číslo
  
  // Dodavatel
  contactId        String?
  contact          Contact?    @relation(fields: [contactId], references: [id])
  
  description      String
  
  // Částky
  subtotal         Decimal     
  vatAmount        Decimal     
  total            Decimal     
  vatRate          Decimal     
  
  currency         String      @default("CZK")
  exchangeRate     Decimal?    
  
  expenseDate      DateTime
  paymentDate      DateTime?
  
  type             ExpenseType // INVOICE, RECEIPT, CASH
  status           ExpenseStatus @default(UNPAID)
  
  categoryId       String?
  category         Category?   @relation(fields: [categoryId], references: [id])
  
  // Dokumenty
  documents        Document[]
  
  // AI zpracování
  aiProcessed      Boolean     @default(false)
  aiExtractedData  Json?       // OCR data
  
  // WhatsApp
  whatsappMessageId String?
  
  // Bankovní transakce
  bankTransactionId String?    @unique
  bankTransaction  BankTransaction? @relation(fields: [bankTransactionId], references: [id])
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@index([status])
  @@index([expenseDate])
  @@unique([userId, expenseNumber])
}

// Bankovní účty
model BankAccount {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  bankName         String
  accountNumber    String
  bankCode         String
  iban             String?
  swift            String?
  
  currency         String      @default("CZK")
  balance          Decimal     
  
  // API propojení
  apiEnabled       Boolean     @default(false)
  apiProvider      String?     // fio, kb, csob, etc.
  apiToken         String?     // Šifrovaný token
  lastSync         DateTime?
  
  transactions     BankTransaction[]
  
  isActive         Boolean     @default(true)
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@unique([accountNumber, bankCode])
}

// Bankovní transakce
model BankTransaction {
  id               String      @id @default(cuid())
  bankAccountId    String
  bankAccount      BankAccount @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)
  
  transactionId    String      // ID z banky
  amount           Decimal     
  currency         String      @default("CZK")
  
  type             TransactionType // CREDIT, DEBIT
  
  date             DateTime
  description      String
  variableSymbol   String?
  constantSymbol   String?
  specificSymbol   String?
  
  counterpartAccount String?
  counterpartName  String?
  counterpartBankCode String?
  
  // Párování
  expense          Expense?
  
  // AI kategorizace
  suggestedCategoryId String?
  suggestedCategory Category?  @relation(fields: [suggestedCategoryId], references: [id])
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([bankAccountId])
  @@index([date])
  @@unique([bankAccountId, transactionId])
}

// Kategorie příjmů/výdajů
model Category {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  name             String
  type             CategoryType // INCOME, EXPENSE
  taxDeductible    Boolean     @default(false)
  vatRate          Decimal?    
  
  // Pro daňové účely
  taxCode          String?     // Kód pro daňové přiznání
  
  invoiceItems     InvoiceItem[]
  expenses         Expense[]
  transactions     BankTransaction[]
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@unique([userId, name, type])
}

// Kontakty (dodavatelé, odběratelé)
model Contact {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  type             ContactType // CUSTOMER, SUPPLIER, BOTH
  
  name             String
  companyName      String?
  ico              String?
  dic              String?
  
  email            String?
  phone            String?
  
  address          String?
  city             String?
  zipCode          String?
  country          String      @default("CZ")
  
  // ARES data
  aresVerified     Boolean     @default(false)
  aresData         Json?
  
  bankAccount      String?
  bankCode         String?
  iban             String?
  
  note             String?
  
  invoices         Invoice[]
  expenses         Expense[]
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@index([ico])
}

// Dokumenty (naskenované účtenky, faktury)
model Document {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  fileName         String
  fileUrl          String      // URL v cloud storage
  fileSize         Int         // v bytech
  mimeType         String
  
  type             DocumentType // INVOICE, RECEIPT, CONTRACT, OTHER
  
  // Vztahy
  expenseId        String?
  expense          Expense?    @relation(fields: [expenseId], references: [id])
  
  // OCR data
  ocrProcessed     Boolean     @default(false)
  ocrData          Json?
  ocrConfidence    Float?
  
  // WhatsApp
  whatsappMessageId String?
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@index([expenseId])
}

// Daňové přehledy
model TaxReport {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  type             TaxReportType // VAT, INCOME_TAX, SOCIAL, HEALTH
  period           String      // 2024-Q1, 2024-M01
  
  // DPH
  vatOutput        Decimal?     // DPH na výstupu
  vatInput         Decimal?     // DPH na vstupu
  vatPayable       Decimal?     // K zaplacení
  
  // Daň z příjmu
  income           Decimal?    
  expenses         Decimal?    
  taxBase          Decimal?    
  taxAmount        Decimal?    
  
  status           TaxReportStatus @default(DRAFT)
  
  submittedAt      DateTime?
  paidAt           DateTime?
  
  data             Json        // Detailní data pro report
  
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  
  @@index([userId])
  @@index([type, period])
  @@unique([userId, type, period])
}

// Notifikace
model Notification {
  id               String      @id @default(cuid())
  userId           String
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  type             NotificationType
  title            String
  message          String
  
  // Pro připomínky
  scheduledFor     DateTime?
  
  // WhatsApp
  sentViaWhatsApp  Boolean     @default(false)
  whatsappMessageId String?
  
  read             Boolean     @default(false)
  readAt           DateTime?
  
  createdAt        DateTime    @default(now())
  
  @@index([userId])
  @@index([read])
  @@index([scheduledFor])
}

// ENUMS
enum PlanType {
  MONTHLY
  YEARLY
}

enum SubscriptionStatus {
  TRIAL
  ACTIVE
  CANCELLED
  EXPIRED
  PAST_DUE
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  REFUNDED
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
  CANCELLED
}

enum ExpenseStatus {
  UNPAID
  PAID
  CANCELLED
}

enum ExpenseType {
  INVOICE
  RECEIPT
  CASH
}

enum TransactionType {
  CREDIT
  DEBIT
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum ContactType {
  CUSTOMER
  SUPPLIER
  BOTH
}

enum DocumentType {
  INVOICE
  RECEIPT
  CONTRACT
  OTHER
}

enum TaxReportType {
  VAT
  INCOME_TAX
  SOCIAL
  HEALTH
}

enum TaxReportStatus {
  DRAFT
  SUBMITTED
  PAID
}

enum NotificationType {
  PAYMENT_REMINDER
  TAX_DEADLINE
  INVOICE_OVERDUE
  SUBSCRIPTION
  SYSTEM
}

enum VatFrequency {
  MONTHLY
  QUARTERLY
}

enum AccountingType {
  TAX_RECORDS    // Daňová evidence
  ACCOUNTING     // Účetnictví
}